name: Release npm package

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check for new release
        uses: cycjimmy/semantic-release-action@v2
        id: dry_semantic # Need an `id` for output variables
        with:
          dry-run: true
          extra_plugins: |
            @semantic-release/changelog@3.0.0
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: New release
        if: steps.dry_semantic.outputs.new_release_published == 'true'
        run: echo "New release!"
      - name: New release
        if: steps.dry_semantic.outputs.new_release_published != 'true'
        run: echo "No new release :("
# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout master
#         uses: actions/checkout@master
#       - name: Setup node
#         uses: actions/setup-node@v1
#         with:
#           node-version: "12.x"
#       - name: Build site
#         run: |
#           npm ci
#           npm run build --if-present
#       - name: Publish package
#         run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#       - name: Deploy to netlify
#         uses: nwtgck/actions-netlify@v1.1.11
#         with:
#           publish-dir: "./build"
#           production-branch: master
#           production-deploy: true
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           deploy-message: "Production deploy from GitHub Actions"
#           enable-pull-request-comment: false
#           overwrites-pull-request-comment: false
#           enable-commit-comment: false
#           enable-commit-status: false
#           # netlify-config-path: ./netlify.toml
#           # functions-dir: ./functions
#         env:
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
